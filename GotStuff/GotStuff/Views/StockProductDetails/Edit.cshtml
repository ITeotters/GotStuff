@model GotStuff.ViewModels.StockProductDetailsVm

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Stock Product</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" claas="text-danger"></div>
            <input type="hidden" asp-for="ProductId"/>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" readonly/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AcquiredDate" class="control-label"></label>
                <input asp-for="AcquiredDate" class="form-control" readonly/>
                <span asp-validation-for="AcquiredDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpirationDate" class="control-label"></label>
                <input asp-for="ExpirationDate" class="form-control"/>
                <span asp-validation-for="ExpirationDate" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-outline-dark"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-outline-dark" asp-action="Index" asp-route-id="@Model?.PantryId" asp-route-productId="@Model?.ProductId">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}